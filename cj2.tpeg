/* CJ Controlled Japanese 文法 */

/*
トップの規則
入力をClauseの繰り返しとみる
*/

Sentence = {
    (TEN / Chunk IGNORED? / Error)* EOS
    #S
}

Chunk =
    / Adnominal    // 連体詞は先, 「多くの人」が形容詞にマッチする
    / Adverb       // 副詞
    / Measure      // 助数詞
    / AdjectiveChunk  // 形容詞節
    / VerbChunk    // 動詞節
    / NounChunk    // 名詞節, 形容動詞節
    / Conjunction  // 接続詞

IGNORED = 
    / 'です' 
    / 'ください'

// CJルール 接続詞

Conjunction = { // e.g., こうして
    @choice('cjdic/CONJ.txt') 
    #Conjunction 
}

// CJルール 副詞
// ADVERB.txt 副詞辞書
// ADVERB_NOUM.txt 
// 副詞名詞辞書 漢字、もしくはカタカナで終わる副詞
// 例. 過去に戻る 過去、言った

Adverb = {   // e.g., 順次
    @choice('cjdic/ADVERB.txt') // 次に
    / @choice('cjdic/ADVERB_NOUN.txt') NounSuffix?  // 順次、
    #Adverb 
}

// 助数詞
// Code に数量を表す語が続く

Measure = {
    UnitPrefix?
    (Code / NumericNoun ) 
    !NONUNIT Unit
    UnitPostfix?
    NounSuffix?
    #Measure
}

UnitPrefix = 
    / { '約' / 'およそ' #Aprox }
    / { 'もう' / 'さらに' / '更に' #More }
    / { '高々'/ 'たかだか' / '多くとも' #AtMost }
    / { '少なくとも' #AtLeast }

NumericNoun = {
    '複数' / [一二三毎数先今次]  // 複数回 毎回 今回
    #Noun
}

// 単位
// カタカナ (例. ドル、メートル)
// もしくは、cjdic/UNIT 単位辞書に登録する

Unit = {
    @choice('cjdic/UNIT.txt') / KATA+
    #Unit
}

NONUNIT = @choice('cjdic/NONUNIT.txt')

UnitPostfix = 
    / { '程' / 'ほど' #Aprox }
    / { 'ごと' / '毎' #Each }
    / { '以上' #Gte }
    / { '以下' #Lte }
    / { '未満' #Lt }

// 連体詞
// 名詞があとに続くが、単独では名詞でも形容動詞でも解釈できない
// 「こ」の 連体詞　「一部」の　名詞＋「の」
// 辞書 ADNOUN.txt
// 「~たる」は除外　微々たる, 切々たる 
// 「~しき」は除外　奇しき, 悪しき 

Adnominal = { 
    @choice('cjdic/ADNOUN.txt') 
    #Adjective 
}

/*
名詞 Nounらしいもので始まる
*/

NounChunk = { 
    Noun NounSuffix? 
    #NChunk 
} 

example Sentence ハワイについて
example Sentence ハワイに着いて

NounSuffix = 
    / Of
    / !'に' NounMood
    / LookLike
    / { [はがも] #Subject }
    / { ('から' / 'より') Of? #From }
    / { 'まで' Of? #Until }
    / { 'による' / 'によっ' ('て' (Of / HAMO) / 'た')? / 'により' #By }
    / { 'に対する' / 'に対し' ('て' (Of / HAMO) / 'た')? #Against }
    / { 'について' (Of / HAMO) / 'に関' ('し' ('て' (Of / HAMO) / 'た')? / 'する') #About }
    / { 'とする' / 'とし' ('て' (Of / HAMO) / 'た')? #Let }
    / { 'を' / [とにで] HAMO #Object }
    / { 'や' #AndOr }
    / { NOUNSUFFIX #Classic }

HAMO = [はも]?
Of = { 'の' !'み' Like? #Of }
Like = { 'よう' NounMood #Like }

There = {
    'あ' Mood 
    #There
}

NounMood = &[でだなに] Be / May
Be = // すべき
    / { 'である' XBase? / 'であり' / 'です' / 'だ' XBase? #Base }
    / { 'でな' XNot #Not} 
    / { 'でしょう' / 'だろう' #WouldBe }
    / { 'でした' XBase? / 'だった' XBase? #Past }
    / { 'なら' #If }
    / { 'な' #Adjective }
    / { 'に' #Adverb }

LookLike = 
    / { 'そう' NounMood #Seem }
    / { 'さ' !'れ' NounSuffix? #Noun }

NOUNSUFFIX1 = [のはかにともやがで]
NOUNSUFFIX2 = 
    / 'など' / 'だけ' / 'まで' / 'から'
    / 'のみ' / 'でも' / 'しか' 
    / 'および' / 'とも' / 'ほど'
    / 'ばかり' / 'さえ' / 'くらい' / 'かも'

NOUNSUFFIX = 
    / NOUNSUFFIX2 NOUNSUFFIX1 
    / NOUNSUFFIX1

/*
名詞 Noun
*/

// CJルール 名詞
// 平仮名が含まれない字句は外来語（名詞）とする
//   ForeignNoun  例. クラス・メソッド
// 平仮名が含まれる名詞は
//  あらかじめ辞書に登録する  DictNone 
//  「奥の細道」のようにカッコで書く  NewNoun


Noun = 
    / Code
    / NewNoun
    / DictNoun
    / PatNoun

NounVerb =  // サ変動詞 〜する
    (NewNoun / DictNoun / PatNoun ) &([さしすざじず]/'でき')

NewNoun =
    / '\「' { (!'\」' .)* #Noun } '\」'
    / '\『' { (!'\』' .)* #Noun } '\』'
    / '\【' { (!'\】' .)* #Noun } '\】'
    / '\〔' { (!'\〕' .)* #Noun } '\〕'

// CJルール 名詞
// 辞書に含まれていない名詞
// 漢字、もしくはカタカタで始まる
// ひらがなは XNOUN が接尾に含まれる

PatNoun = {
    XVERB ( XVERB / NONHIRA+ / &[はもにをがと] / EOF )
    / NONHIRA (XVERB / XNOUN / NONHIRA)* 
    #Noun
}

// XVERB 
// 呼び + 出し のようにふたつ組み合わせて名詞になる動詞
// 組み+ 込み 戻り+値 上+ 付け   
// 「~ ます」に続く

XVERB = @choice('cjdic/XVERB.txt') 

// XVERB 以外の名詞の接尾詞
XNOUN = @choice('cjdic/XNOUN.txt')

DictNoun = {
    @choice('cjdic/NOUN.txt')
    #Noun
}

/*
動詞の未然形活用
未然形はほぼ確実に助動詞が繋がるため先読みで誤マッチを抑制している
これで「止まる」の先頭文字列「止ま」が「止む」の未然形「止ま」にマッチしない
*/

VerbChunk = {
    NounVerb XNounVerb // 愛する　と　愛す（サ行５段）
    / Verb5KA XVerb5KA
    / Verb5SA XVerb5SA
    / Verb5TA XVerb5TA
    / Verb5NA XVerb5NA
    / Verb5MA XVerb5MA
    / Verb5RA XVerb5RA
    / Verb5WA XVerb5WA
    / Verb5GA XVerb5GA
    / Verb5BA XVerb5BA
    / Verb1 XVerb1
    / VerbSA
    / VerbKA
    #VChunk  
}

Verb5KA = { @choice('dic/Verb/VERB5KA.txt') &[か-こい] #VerbKA }
Verb5SA = { @choice('dic/Verb/VERB5SA.txt') &[さ-そ] #VerbSA }
Verb5TA = { @choice('dic/Verb/VERB5TA.txt') &[た-とっ] #VerbTA }
Verb5NA = { @choice('dic/Verb/VERB5NA.txt') &[な-のん] #VerbNA }
Verb5MA = { @choice('dic/Verb/VERB5MA.txt') &[ま-もん] #VerbMA }
Verb5RA = { @choice('dic/Verb/VERB5RA.txt') &[ら-ろっ] #VerbRA }
Verb5WA = { @choice('dic/Verb/VERB5WA.txt') &[わいうえおっ] #VerbWA }
Verb5GA = { @choice('dic/Verb/VERB5GA.txt') &[が-ごい] #VerbGA }
Verb5BA = { @choice('dic/Verb/VERB5BA.txt') &[ば-ぼん] #VerbBA }
Verb1 = { @choice('dic/Verb/VERB1.txt') #Verb1 }

XBase = 
    / XBaseCase
    / XBaseOnly
    / XBaseSince
    / XBaseAs
    / XBaseThat
    / XBaseWhether
    / NounMood

XBaseThat = {
    'と' HAMO VerbChunk
    #That
}

XBaseOnly = { // 一見しただけでは
    ('だけで' / 'のみで' / 'ので') HAMO
    #OnlyThat
}

XBaseWhether = { // 異なるのか
    'の'? 'か' TEN? (XBaseThat/NounSuffix)?
    #Whether
}

XBaseCase = {
    ('とき' TEN / '場合' TEN / 'の'? 'なら' / 'ら' )
    #If
}

XBaseSince = {
    ('ため' NounSuffix? / 'には' / 'ので')
    #Since
}

XBaseAs = {
    ('通り' / 'とおり' / 'ように')
    #As
}

XPastAnd = { // 提供した+り
    'り'
    #And
}

XNot = //な
    / { 'ければ' #If }
    / { 'くな' XNot #Not }
    / { 'く' 'て'? #And }
    / { 'い' XBase? #Base }
    / { 'かった' XBase? #PastBase }

ASuffix = // 書か+ない   探さ+ない
    / { 'な' XNot #Not }
    / { 'さ'? 'せ' 'られ'? Mood #Make }
    / { 'れ' Mood #Been }

PoliteMood =
    / { 'ます' / 'ましょう' #Base }
    / { 'ません' 'でした'? #Not }
    / { 'ましたら' #If }
    / { 'ました' #Past }
    / { 'まして' #And }

May =
    { 'かも' ('知'/'し') 'れ' ('ない' / 'ません') #May }

Mood = // でき　　られ
    / &'ま' PoliteMood
    / { 'な' XNot #Not }
    / { 'る' XBase? #Base }
    / { 'た' (XBase / XPastAnd)? #Past }
    / { 'れば' #If }
    / { 'てい' Mood #Being }
    / { 'て'? #And }

AMood = // あ+る
    / 'り' &'ま' PoliteMood
    / { 'る' XBase? #Base }
    / { 'った' (XBase / XPastAnd)? #Past }
    / { 'れば' #If }
    / { 'って'? #And }

Being = {
    'て' Mood #Being
}

ISuffix = // 書き+つつ  探し+つつ　
    / &'ま' PoliteMood
    / { 'た' XNot #WantTo }   // 書きたい
    / { ('やす' / 'よ' ) XNot #EasyTo }   // 書きやすい
    / { ('にく' / 'がた' / 'づら') XNot #HardTo } //書きがたい
    / { ('つつ' / 'ながら') #While }
    / { #And }

IXSuffix = // 書い+て   探し+て　
    / { 'た' (XBase / XPastAnd)? #Past }
    / { 'てい' Mood #Being }
    / { 'て' #And }

IXDSuffix = // 遊んだ   遊んで
    / { 'だ' (XBase / XPastAnd)? #Past }
    / { 'でい' Mood #Being }
    / { 'で' #And }

USuffix = // 書く　探す
    / Should
    / { XBase? #Base }

Should = { 'べき' NounMood? / 'べし' #Should }

ESuffix = // 書け+ば  探せ+ば
    / { 'ば' #If }

OSuffix = // 書こ+う　探そ+う
    / { 'う' XBase? #Will }

XNounVerb = // 例. 行動する 論じる
    / [すず] ('る' USuffix / Should / 'れ' ESuffix)
    / [しじ] (ASuffix / ISuffix / IXSuffix / 'よ' OSuffix )
    / { 'され' Mood #Been }
    / { 'でき' Mood #Can }

// カ行変格活用動詞
VerbKA = 
    / { 'こ' ASuffix #VerbKA }
    / { 'き' IXSuffix #VerbKA }
    / { 'くる' XBase? #VerbKA }
    / { 'くれば' #IfVerbKA }

VerbSA = // 例. 参考に+する
    / { 'す' ('る' USuffix / Should / 'れ' ESuffix) #VerbSA }
    / { 'し' (ASuffix / ISuffix / IXSuffix / 'よ' OSuffix ) #VerbSA }
    / { 'され' Mood #Been }
    / { 'でき' Mood #Can }

XVerb5KA = // 書
    / 'か' ASuffix
    / 'き' ISuffix
    / 'い' IXSuffix
    / 'く' USuffix
    / 'け' ESuffix
    / 'こ' OSuffix

XVerb5SA = // 探
    / 'さ' ASuffix  // ない
    / 'し' ISuffix  // ながら
    / 'し' IXSuffix // て
    / 'す' USuffix  // 
    / 'せ' ESuffix  // ば
    / 'こ' OSuffix  // う


XVerb5TA = // 勝
    / 'た' ASuffix  // ない
    / 'ち' ISuffix  // ながら
    / 'っ' IXSuffix // て
    / 'つ' USuffix  // 
    / 'て' ESuffix  // ば
    / 'と' OSuffix  // う

XVerb5NA = // 死
    / 'な' ASuffix  // ない
    / 'に' ISuffix  // ながら
    / 'ん' IXDSuffix // て
    / 'ぬ' USuffix  // 
    / 'ね' ESuffix  // ば
    / 'の' OSuffix  // う

XVerb5MA = // 読
    / 'ま' ASuffix  // ない
    / 'み' ISuffix  // ながら
    / 'ん' IXDSuffix // て
    / 'む' USuffix  // 
    / 'め' ESuffix  // ば
    / 'も' OSuffix  // う

XVerb5RA = // 切
    / 'ら' ASuffix  // ない
    / 'り' ISuffix  // ながら
    / 'っ' IXSuffix // て
    / 'る' USuffix  // 
    / 'れ' ESuffix  // ば
    / 'ろ' OSuffix  // う

XVerb5WA = // 笑
    / 'わ' ASuffix  // ない
    / 'い' ISuffix  // ながら
    / 'っ' IXSuffix // て
    / 'う' USuffix  // 
    / 'え' ESuffix  // ば
    / 'お' OSuffix  // う

XVerb5GA = // 防
    / 'が' ASuffix  // ない
    / 'ぎ' ISuffix  // ながら
    / 'い' IXDSuffix // て
    / 'ぐ' USuffix  // 
    / 'げ' ESuffix  // ば
    / 'ご' OSuffix  // う

XVerb5BA = // 遊
    / 'ば' ASuffix  // ない
    / 'び' ISuffix  // ながら
    / 'ん' IXDSuffix // て
    / 'ぶ' USuffix  // 
    / 'べ' ESuffix  // ば
    / 'ぼ' OSuffix  // う

XVerb1 = // 着る 述べ
    / 'る' USuffix  // 
    / 'れ' ESuffix  // ば
    / { 'られ' Mood #Been }   // 述べられています
    / 'よ' OSuffix  // う
    / ASuffix  // ない
    / ISuffix  // ながら
    / IXSuffix // て

/* 形容詞 */

AdjectiveChunk = {
    Adjective ('そう' XNAdjective / XAdjective )
    #AChunk
}

// 形容詞: 美し

Adjective = {
    ADJ
    #Adjective
}

ADJ = @choice('dic/ADJ.txt') &ADJ_CHECK
ADJ_CHECK = 'そう' / [さかくけい]

// 形容動詞: 素敵

NAdjective = {
    NOUNADJ 'そう'? / ADJ 'そう'
    #NounAdjective
}

NOUNADJ = 
    (@choice('cjdic/NOUNADJ.txt') / NONHIRA+) &NOUNADJ_CHECK
NOUNADJ_CHECK = 'そう' / [さにでだな]

XAdjective = XNot / LookLike

XNAdjective = //素敵
    / NounMood // だ、です、かも知れない
    / { 'ならば' #If }
    / { 'さ'? NounSuffix? #Noun }

/* コードは名詞扱い */

Code = {
    [A-Za-z0-9.(){}, +\-*/%\\]+
    #Code
}

// CJ.TPEG マッチしない名詞はエラーとしてスキップする

Error = {
    HIRA+
    #err
}

/* 文字コード */

Ten = { TEN #Ten }

SPC = [ ]
EOF = !.
EOS = [。．.\n]? EOF
TEN = [、，,\n]
KANJI = [㐀-䶵一-龠々〇〻ーご]
KATA = [ァ-ヶー・]
HIRA = [ぁ-ん]
NONHIRA = (!HIRA !TEN .)
ALPHA = [a-zA-Zａ-ｚＡ-Ｚ]
NUM = [\.,0-9０-９一二三四五六七八九十百千万億兆京垓秭穰溝澗正載極]
SYMBOL = [^＾~〜\-ー_＿!！?？#＃$＄&＆=＝@＠*＊+＋/・]


// 多少異なっている
// 以下のような記述形式をとります
// 記述では
// 山田孝雄は、係助詞が陳述に影響を及ぼすとしている
// 一分野か　一分、野球する
// 自動車産業、宇宙産業などで参考にしている